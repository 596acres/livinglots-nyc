{
  "_args": [
    [
      {
        "raw": "catiline",
        "scope": null,
        "escapedName": "catiline",
        "name": "catiline",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/eric/Documents/596/livinglots-nyc/livinglotsnyc/static"
    ]
  ],
  "_from": "catiline@latest",
  "_id": "catiline@2.9.3",
  "_inCache": true,
  "_location": "/catiline",
  "_npmUser": {
    "name": "cwmma",
    "email": "calvin.metcalf@gmail.com"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "catiline",
    "scope": null,
    "escapedName": "catiline",
    "name": "catiline",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/",
    "/livinglots.addlot/leaflet-tilelayer-vector",
    "/livinglots.parcels/leaflet-tilelayer-vector"
  ],
  "_resolved": "https://registry.npmjs.org/catiline/-/catiline-2.9.3.tgz",
  "_shasum": "a31c8179a4f8cb807d93c05b7bb865283350559b",
  "_shrinkwrap": null,
  "_spec": "catiline",
  "_where": "/home/eric/Documents/596/livinglots-nyc/livinglotsnyc/static",
  "author": {
    "name": "Calvin Metcalf",
    "email": "calvin.metcalf@gmail.com",
    "url": "https://github.com/calvinmetcalf"
  },
  "bugs": {
    "url": "https://github.com/calvinmetcalf/catiline/issues"
  },
  "dependencies": {},
  "description": "Multi proccessing with workers in the browser.",
  "devDependencies": {
    "chai": "~1.7.2",
    "defs": "~0.4.1",
    "grunt": "~0.4.1",
    "grunt-cli": "~0.1.9",
    "grunt-contrib-concat": "~0.1.3",
    "grunt-contrib-connect": "~0.3.0",
    "grunt-contrib-jshint": "~0.5.4",
    "grunt-contrib-uglify": "~0.2.0",
    "grunt-mocha-phantomjs": "~0.3.0",
    "grunt-saucelabs": "~4.0.4",
    "mocha": "~1.12.1",
    "uglify-js": "~2.3.6"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "a31c8179a4f8cb807d93c05b7bb865283350559b",
    "tarball": "https://registry.npmjs.org/catiline/-/catiline-2.9.3.tgz"
  },
  "homepage": "https://github.com/calvinmetcalf/catiline#readme",
  "jam": {
    "include": [
      "README.md",
      "LICENCE.md",
      "dist/catiline.js"
    ]
  },
  "keywords": [
    "workers",
    "threads",
    "parallel"
  ],
  "license": "MIT",
  "main": "dist/catiline.js",
  "maintainers": [
    {
      "name": "cwmma",
      "email": "calvin.metcalf@gmail.com"
    }
  ],
  "name": "catiline",
  "optionalDependencies": {},
  "readme": "__Catiline.js__ is a JavaScript library all about workers. Workers should make your life easier, not harder, and with Catiline.js launching a new worker is as simple as calling a function. It works the same across all (modern) browsers. Formerly known as Communist.js, Catiline.js is the same great library with a less controversial name.\n\nHow easy is it? `var worker = cw(myFunc)` creates a worker. Send it data with `var response = worker.data(YOUR DATA);`, and the response is a [promise](http://blogs.msdn.com/b/ie/archive/2011/09/11/asynchronous-programming-in-javascript-with-promises.aspx). It's that easy. For more in-depth usage, checkout the examples bellow or the \n\n<a class='navLink' id='API' href='docs/API.md'>API page</a>.\n\nWant to use it? Grab the \n[development version](https://raw.github.com/calvinmetcalf/catiline/master/dist/catiline.js)\nor [production version](https://raw.github.com/calvinmetcalf/catiline/master/dist/catiline.min.js) from the dist folder. \n\nFor usage in addition to the <a class='navLink' id='API' href='docs/API.md'>API page</a> and <a class='navLink' id='DOCUMENTATION' href='docs/DOCUMENTATION.md'>documentation</a>, I wrote a [blog post](http://cwmma.tumblr.com/post/54338607071/making-web-workers-with-communistjs) about Catiline.js (under its old name). Or, you can browse some demos:\n\n- [Parsing a dictionary](http://catilinejs.com/website/dict/)\n- [Fractal Map](http://catilinejs.com/website/leaflet-fractal/), (April Mozilla Dev Derby [Finalist](https://hacks.mozilla.org/2013/06/announcing-the-winners-of-the-april-2013-dev-derby/))\n- [RTree Bounding Boxes](http://leaflet-extras.github.io/RTree/examples/worker.html)\n- [Census Visualization](http://data-otp.rhcloud.com/)\n- [Vector Map Tiles](http://calvinmetcalf.github.io/vector-layers/)\n- [Unzipping files and reprojecting maps](http://calvinmetcalf.github.io/shapefile-js/site/proj.html)\n\nUpdates and changes are all in the <a class='navLink' id='CHANGELOG' href='docs/CHANGELOG.md'>changelog</a>.\n\nThere is also a <a class='navLink' id='PLUGINS' href='docs/PLUGINS.md'>plugin list</a>.\n\n__Important:__ the file catiline.js or catiline.min.js should be a standalone file hosted on the same domain as your web page. If you can't, or need to bundle catiline but you need it to work on IE10, Opera, and Safari, you have to host the file \"SHIM_WORKER.js\" on the same domain as the html file \nand set the path to it in a global variable `SHIM_WORKER_PATH` before you load catiline.\n\nThis grew out of my work with [earlier versions](https://github.com/calvinmetcalf/catiline/tree/6e920be75ab3ed9b2a36d24dd184a9945f6b4000) \nof this library and my [differences in opinion](https://gist.github.com/calvinmetcalf/6050205) with\n[Parallel.js](https://github.com/adambom/parallel.js)'s direction. There is\nalso a library doing very similar things called [operative](https://github.com/padolsey/operative).\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/calvinmetcalf.svg)](https://saucelabs.com/u/calvinmetcalf)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/calvinmetcalf/catiline.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "2.9.3"
}
